plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.google.devtools.ksp' version  '2.0.21-1.0.27'
    id "com.google.dagger.hilt.android" version "2.51.1"
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    compileSdk rootProject.compileSdkVersion
    defaultConfig {
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ksp{
            arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17.toString()
        targetCompatibility JavaVersion.VERSION_17.toString()
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    namespace 'com.jefryjacky.auth'

    publishing {
        multipleVariants('custom') {
            includeBuildTypeValues('debug','release')
//            includeFlavorDimensionAndValues(
//                    /*dimension =*/ 'version',
//                    /*values =*/ 'staging', 'production'
//            )
        }
    }

    configurations {
        // Initializes a placeholder for the freeDebugImplementation dependency configuration.
        stagingDebugImplementation {}
        stagingReleaseImplementation {}
        productionDebugImplementation {}
        productionReleaseImplementation {}
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.0'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation platform('androidx.compose:compose-bom:2024.09.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation project(path: ':core')

    //rxjava2
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    //dagger
    implementation "com.google.dagger:hilt-android:2.51.1"
    androidTestImplementation platform('androidx.compose:compose-bom:2024.09.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    ksp "com.google.dagger:hilt-compiler:2.51.1"
    ksp "com.google.dagger:hilt-android-compiler:2.51.1"

    //chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library:3.5.2"

    //room
    api "androidx.room:room-runtime:$roomVersion"
    api "androidx.room:room-rxjava2:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"

    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    //google signin
    implementation 'com.google.android.gms:play-services-auth:21.1.1'

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
}

apply from:"$rootDir/auth-gradle-mvn-push.gradle"

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KAPT and javac, change the line below to
        // return ["-Aroom.schemaLocation=${schemaDir.path}".toString()].
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}
